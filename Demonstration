const int pingPin = 11;
const int motorPin = 10;
const int givingButtonPin = 7;
const int receivingButtonPin = 6;




// Variables for the duration and the distance
long duration;
int distance;

void setup() {
  Serial.begin(9600);
  pinMode(givingButtonPin, OUTPUT);
  pinMode(receivingButtonPin, INPUT);
}

void loop() {
  // establish variables for duration of the ping, and the distance result
  // in inches and centimeters:
  
  long vibration;
  
  digitalWrite(givingButtonPin, HIGH);
  vibration = updateVibration();
  
  if (vibration >= 1000) {
  	tone(motorPin, vibration);
  }
  else {
    noTone(motorPin);
  }

  int receivingButtonState = digitalRead(receivingButtonPin);
  if (receivingButtonState == HIGH) { 
    while (vibration > 1000) {
        noTone(motorPin);
    	delay (1); 
    	vibration = updateVibration();
    }
  } 
}

long updateVibration() {
  
  long duration, inches, cm, vibration;
  
    // The PING))) is triggered by a HIGH pulse of 2 or more microseconds.
  // Give a short LOW pulse beforehand to ensure a clean HIGH pulse:
  pinMode(pingPin, OUTPUT);
  digitalWrite(pingPin, LOW);
  delayMicroseconds(2);
  digitalWrite(pingPin, HIGH);
  delayMicroseconds(5);
  digitalWrite(pingPin, LOW);

  // The same pin is used to read the signal from the PING))): a HIGH pulse
  // whose duration is the time (in microseconds) from the sending of the ping
  // to the reception of its echo off of an object.
  pinMode(pingPin, INPUT);
  duration = pulseIn(pingPin, HIGH);
  
    // convert the time into a distance
  inches = microsecondsToInches(duration);
  cm = microsecondsToCentimeters(duration);
  vibration = map(inches, 0, 120, 2048, 1000);
  
  Serial.print(inches);
  Serial.print("in, ");
  Serial.print(cm);
  Serial.print("cm, ");
  Serial.print(vibration);
  Serial.print(" vibrations");
  Serial.println();
  
  return vibration;
}

long microsecondsToInches(long microseconds) {
  // According to Parallax's datasheet for the PING))), there are 73.746
  // microseconds per inch (i.e. sound travels at 1130 feet per second).
  // This gives the distance travelled by the ping, outbound and return,
  // so we divide by 2 to get the distance of the obstacle.
  // See: http://www.parallax.com/dl/docs/prod/acc/28015-PING-v1.3.pdf
  return microseconds / 74 / 2;
}

long microsecondsToCentimeters(long microseconds) {
  // The speed of sound is 340 m/s or 29 microseconds per centimeter.
  // The ping travels out and back, so to find the distance of the object we
  // take half of the distance travelled.
  return microseconds / 29 / 2;
}
